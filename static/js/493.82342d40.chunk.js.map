{"version":3,"file":"static/js/493.82342d40.chunk.js","mappings":"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","sources":["helpers/fetchDataMovies.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '040fbcd62819e93b33d68dfe6cbb3776';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchPopularMovies = async () => {\n  try {\n    const url = `${BASE_URL}movie/popular?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    const movies = response.data.results;\n    return movies;\n  } catch (error) {\n    console.error('Ooops! We have a problem!', error.message);\n    throw error;\n  }\n};\n\nexport const fetchMoviesBySearchQuery = async searchQuery => {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n    const response = await axios.get(url);\n    const movies = response.data.results;\n    return movies;\n  } catch (error) {\n    console.error('Ooops! We have a problem!', error.message);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    const movie = response.data;\n    return movie;\n  } catch (error) {\n    console.error('Ooops! We have a problem!', error.message);\n    throw error;\n  }\n};\n\nexport const fetchCastByMovieId = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    const cast = response.data.cast;\n    return cast;\n  } catch (error) {\n    console.error('Ooops! We have a problem!', error.message);\n    throw error;\n  }\n};\n\nexport const fetchReviewsByMovieId = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    const reviews = response.data.results;\n    return reviews;\n  } catch (error) {\n    console.error('Ooops! We have a problem!', error.message);\n    throw error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastByMovieId } from 'helpers/fetchDataMovies';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const castData = await fetchCastByMovieId(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error('Oooops! There is a problem...', error.message);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  const formatCastNames = () => {\n    return cast.map(actor => actor.name).join(', ');\n  };\n\n  return (\n    <div>\n      <h3>Cast</h3>\n      <p>{formatCastNames()}</p>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","response","movies","wrap","_context","prev","next","concat","axios","sent","data","results","abrupt","t0","console","error","message","stop","apply","arguments","fetchMoviesBySearchQuery","_ref2","_callee2","searchQuery","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","movie","_context3","_x2","fetchCastByMovieId","_ref4","_callee4","cast","_context4","_x3","fetchReviewsByMovieId","_ref5","_callee5","reviews","_context5","_x4","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","fetchMovieCast","castData","_jsxs","children","_jsx","map","actor","name","join"],"sourceRoot":""}